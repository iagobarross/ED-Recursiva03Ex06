/*6. Criar uma aplica√ß√£o em Java que tenha uma fun√ß√£o recursiva que, recebendo um n√∫mero
inteiro (N), apresente a sa√≠da da somat√≥ria
ùëÜùëÜ = 1 + 1 + 1 + 1 + ... + 1
        2!  3!  4!        n!

‚Ä¢ O C√≥digo deve apresentar, em formato de coment√°rio, como foi definida a condi√ß√£o
de parada;
‚Ä¢ O C√≥digo deve apresentar, em formato de coment√°rio, como foi definida a rela√ß√£o de
chamada dos passos;*/
package controller;

public class ControllerFFatorial {
	
	public ControllerFFatorial() {
		super();
	}
	
	public double somaFracao(int numero) {
		double soma = 0;
		if(numero == 1) {
			return 1; //Quando numero for igual a 1, retorna 1 para a soma.
		} else {
			soma += 1 / (double)fatorial(numero);
			return soma + somaFracao(numero - 1);//Enquanto numero maior que 1, soma a variavel com 1/recursiva do fatorial e chama a funcao com o n√∫mero anterior.
		}
	}
	
	public int fatorial(int numero) {
		if(numero == 1) {
			return 1; //O fatorial acaba quando o numero chegar a 1, retornando 1 para a multiplica√ß√£o.
		} else {
			return numero * fatorial(numero - 1);//Enquanto numero for maior que 1, retorna a multiplicacao de numero com a recursiva.
		}
	}
}
